{"version":3,"file":"main.49b9015d7ff3d099c5a9.js","mappings":"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","sources":["webpack://mesto-project/./src/scripts/api.js","webpack://mesto-project/./src/scripts/popup.js","webpack://mesto-project/./src/scripts/validation.js","webpack://mesto-project/./src/scripts/cards.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/cohort-mag-4',\r\n  headers: {\r\n    authorization: '37fbf8d3-fcee-4506-bb54-03f43938c259',\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nasync function request({ path, options, errorMessage }) {\r\n  return fetch(`${config.baseUrl}${path}`, options).then((response) => {\r\n    return checkResponse(response, errorMessage);\r\n  });\r\n}\r\n\r\nfunction checkResponse(response, errorMessage) {\r\n  if (!response.ok) {\r\n    return Promise.reject(`${errorMessage}: ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\nconst currentUserAPI = {\r\n  load: async () => {\r\n    return request({\r\n      path: '/users/me',\r\n      options: {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n      },\r\n      errorMessage: 'Ошибка API при получении данных пользователя',\r\n    });\r\n  },\r\n  update: async ({ name, description }) => {\r\n    return request({\r\n      path: '/users/me',\r\n      options: {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: name,\r\n          about: description,\r\n        }),\r\n      },\r\n      errorMessage: 'Ошибка API при обновлении данных пользователя',\r\n    });\r\n  },\r\n  updateAvatar: async ({ link }) => {\r\n    return request({\r\n      path: '/users/me/avatar',\r\n      options: {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          avatar: link,\r\n        }),\r\n        errorMessage: 'Ошибка API при обновлении аватара',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nconst cardAPI = {\r\n  loadList: async () => {\r\n    return request({\r\n      path: '/cards',\r\n      options: {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n      },\r\n      errorMessage: 'Ошибка API при получении списка карточек',\r\n    });\r\n  },\r\n  create: async ({ name, link }) => {\r\n    return request({\r\n      path: '/cards',\r\n      options: {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n          name: name,\r\n          link: link,\r\n        }),\r\n      },\r\n      errorMessage: 'Ошибка API при создании новой карточки',\r\n    });\r\n  },\r\n  like: async (cardId) => {\r\n    return request({\r\n      path: `/cards/likes/${cardId}`,\r\n      options: {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n      },\r\n      errorMessage: 'Ошибка API при лайкании карточки',\r\n    });\r\n  },\r\n  removeLike: async (cardId) => {\r\n    return request({\r\n      path: `/cards/likes/${cardId}`,\r\n      options: {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n      },\r\n      errorMessage: 'Ошибка API при убирании лайка карточки',\r\n    });\r\n  },\r\n  delete: async (cardId) => {\r\n    return request({\r\n      path: `/cards/${cardId}`,\r\n      options: {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n      },\r\n      errorMessage: 'Ошибка API при удалении карточки',\r\n    });\r\n  },\r\n};\r\n\r\nexport { cardAPI, currentUserAPI };\r\n","const customPopupEvents = {\r\n  close: new Event('close-popup'),\r\n};\r\n\r\nfunction closePopupOnESC(e) {\r\n  if (e.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    if (popup) {\r\n      popup.dispatchEvent(customPopupEvents.close);\r\n    }\r\n  }\r\n}\r\n\r\nfunction enablePopup({ popupSelector, triggerSelector, onShowPopup, onHidePopup }) {\r\n  const popup = document.querySelector(popupSelector);\r\n  const trigger = document.querySelector(triggerSelector);\r\n\r\n  if (popup === null || trigger === null) {\r\n    console.error('Неверный селектор для попапа и/или триггера', popupSelector, triggerSelector);\r\n    return;\r\n  }\r\n\r\n  const closeButton = popup.querySelector('.popup__close');\r\n\r\n  if (closeButton === null) {\r\n    console.error('В попапе отсутствует кнопка закрыть', popupSelector);\r\n    return;\r\n  }\r\n\r\n  trigger.addEventListener('click', show);\r\n  closeButton.addEventListener('click', hide);\r\n  popup.addEventListener('click', (e) => {\r\n    if (e.target === popup) {\r\n      hide();\r\n    }\r\n  });\r\n  popup.addEventListener(customPopupEvents.close.type, hide);\r\n\r\n  function show() {\r\n    document.addEventListener('keydown', closePopupOnESC);\r\n\r\n    popup.classList.add('popup_is-animated');\r\n    setTimeout(() => {\r\n      popup.classList.add('popup_is-opened');\r\n    }, 1);\r\n\r\n    if (typeof onShowPopup === 'function') {\r\n      onShowPopup();\r\n    }\r\n  }\r\n\r\n  function hide() {\r\n    document.removeEventListener('keydown', closePopupOnESC);\r\n\r\n    popup.classList.remove('popup_is-opened');\r\n    setTimeout(() => {\r\n      popup.classList.remove('popup_is-animated');\r\n    }, 600);\r\n\r\n    if (typeof onHidePopup === 'function') {\r\n      onHidePopup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    show,\r\n    hide,\r\n  };\r\n}\r\n\r\nexport { enablePopup };\r\n","const customFormEvents = {\r\n  formLoading: new Event('form-loading'),\r\n  formStopLoading: new Event('form-stop-loading'),\r\n};\r\n\r\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n}\r\n\r\nfunction isValid(formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  const buttonInitialText = buttonElement.textContent;\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  formElement.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n  });\r\n\r\n  formElement.addEventListener(customFormEvents.formLoading.type, (e) => {\r\n    const buttonText = 'Ждите...';\r\n\r\n    buttonElement.setAttribute('disabled', 'disabled');\r\n    buttonElement.textContent = buttonText;\r\n  });\r\n\r\n  formElement.addEventListener(customFormEvents.formStopLoading.type, () => {\r\n    buttonElement.removeAttribute('disabled');\r\n    buttonElement.textContent = buttonInitialText;\r\n  });\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      isValid(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n}\r\n\r\nfunction enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.setAttribute('disabled', 'disabled');\r\n  } else {\r\n    buttonElement.removeAttribute('disabled');\r\n  }\r\n}\r\n\r\nfunction clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    inputElement.setCustomValidity('');\r\n  });\r\n  buttonElement.setAttribute('disabled', 'disabled');\r\n}\r\n\r\nfunction clearInputValues(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.value = '';\r\n  });\r\n}\r\n\r\nexport { enableValidation, clearValidation, clearInputValues, customFormEvents };\r\n","import placeHolderImg from '../images/placeholder.png';\n\nfunction createCardNode({\n  cardTemplate,\n  id,\n  title,\n  imageUrl,\n  likesCount,\n  showDelete,\n  isLiked,\n  onLikeButtonClick,\n  onImageClick,\n  onDeleteClick,\n}) {\n  if (cardTemplate === null) {\n    console.error('Темплейт карточки не найден');\n    return;\n  }\n\n  const card = cardTemplate.content.cloneNode(true);\n  const cardRoot = card.querySelector('.places__item');\n  const cardImage = card.querySelector('.card__image');\n  const cardDeleteButton = card.querySelector('.card__delete-button');\n  const cardTitle = card.querySelector('.card__title');\n  const cardLikeButton = card.querySelector('.card__like-button');\n  const likesAmount = card.querySelector('.card__like-count');\n\n  if (showDelete !== true) {\n    cardDeleteButton.remove();\n  }\n\n  if (isLiked === true) {\n    cardLikeButton.classList.add('card__like-button_is-active');\n  }\n\n  cardRoot.setAttribute('data-id', id);\n  cardTitle.textContent = title;\n  cardImage.src = imageUrl;\n  cardImage.alt = title;\n  likesAmount.textContent = likesCount;\n\n  cardLikeButton.addEventListener('click', () => {\n    if (typeof onLikeButtonClick === 'function') {\n      onLikeButtonClick(id, cardLikeButton, likesAmount);\n    }\n  });\n\n  cardImage.addEventListener('click', () => {\n    if (typeof onImageClick === 'function') {\n      onImageClick(cardImage.src, title);\n    }\n  });\n\n  cardImage.addEventListener('error', () => {\n    cardImage.src = placeHolderImg;\n  });\n\n  if (showDelete === true) {\n    cardDeleteButton.addEventListener('click', () => {\n      if (typeof onDeleteClick === 'function') {\n        onDeleteClick(id, title);\n      }\n    });\n  }\n\n  return card;\n}\n\nfunction addCardToList(cardList, card) {\n  cardList.prepend(card);\n}\n\nfunction removeCardFromList(cardId) {\n  const card = document.querySelector(`[data-id='${cardId}']`);\n  if (card) {\n    card.remove();\n  }\n}\n\nfunction updateCardLikeUI({ likeButton, likeText, likeCount }) {\n  likeButton.classList.toggle('card__like-button_is-active');\n  likeText.textContent = likeCount;\n}\n\nexport { createCardNode, addCardToList, removeCardFromList, updateCardLikeUI };\n","import '../pages/index.css';\n\nimport { cardAPI, currentUserAPI } from './api';\nimport { enablePopup } from './popup';\nimport {\n  enableValidation,\n  clearValidation,\n  clearInputValues,\n  customFormEvents,\n} from './validation';\nimport { createCardNode, updateCardLikeUI, addCardToList, removeCardFromList } from './cards';\n\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inputErrorClass: 'popup__input_type_error',\n};\n\nconst currentUser = {\n  name: '',\n  description: '',\n  avatar: '',\n  id: '',\n};\n\nconst userDom = {\n  profileName: document.querySelector('.profile__title'),\n  profileDescription: document.querySelector('.profile__description'),\n  profileImage: document.querySelector('.profile__image'),\n};\n\nconst userFormDom = {\n  form: document.querySelector(\"form[name='edit-profile']\"),\n  name: document.querySelector(\"input[name='name']\"),\n  description: document.querySelector(\"input[name='description']\"),\n};\n\nconst avatarFormDom = {\n  form: document.querySelector(\"form[name='avatar']\"),\n  link: document.querySelector(\"input[name='avatar-link']\"),\n};\n\nconst profilePopup = enablePopup({\n  popupSelector: '.popup_type_edit',\n  triggerSelector: '.profile__edit-button',\n  onShowPopup: () => {\n    setUserDataOnPopup();\n    clearValidation(userFormDom.form, validationConfig);\n  },\n});\n\nconst avatarPopup = enablePopup({\n  popupSelector: '.popup_type_edit-avatar',\n  triggerSelector: '.profile__image',\n  onShowPopup: () => {\n    setUserAvatarDataOnPopup();\n    clearValidation(avatarFormDom.form, validationConfig);\n  },\n});\n\nfunction onUserDataLoaded(data) {\n  currentUser.name = data.name ?? '';\n  currentUser.description = data.about ?? '';\n  currentUser.avatar = data.avatar ?? '';\n  currentUser.id = data._id ?? '';\n  updateUserDataOnUI();\n}\n\nfunction updateUserDataOnUI() {\n  if (\n    userDom.profileName === null ||\n    userDom.profileDescription === null ||\n    userDom.profileImage === null\n  ) {\n    console.error('Нет необходимого html для отображения данных пользователя');\n    return;\n  }\n\n  userDom.profileName.textContent = currentUser.name;\n  userDom.profileDescription.textContent = currentUser.description;\n  userDom.profileImage.style.backgroundImage = `url(${currentUser.avatar})`;\n}\n\nfunction setUserDataOnPopup() {\n  if (userFormDom.name === null || userFormDom.description === null) {\n    console.error('Нет необходимого html для отображения данных пользователя в попапе');\n    return;\n  }\n\n  userFormDom.name.value = currentUser.name;\n  userFormDom.description.value = currentUser.description;\n}\n\nfunction setUserAvatarDataOnPopup() {\n  if (avatarFormDom.link === null) {\n    console.error('Инпут аватара профиля не найден');\n    return;\n  }\n\n  avatarFormDom.link.value = currentUser.avatar;\n}\n\nfunction userFormHandler({ onUserDataUpdate }) {\n  if (userFormDom.form === null || userFormDom.name === null || userFormDom.description === null) {\n    console.error('Форма пользователя не найдена');\n    return;\n  }\n\n  userFormDom.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    userFormDom.form.dispatchEvent(customFormEvents.formLoading);\n\n    currentUserAPI\n      .update({\n        name: userFormDom.name.value,\n        description: userFormDom.description.value,\n      })\n      .then((response) => {\n        onUserDataLoaded(response);\n        if (typeof onUserDataUpdate === 'function') {\n          onUserDataUpdate();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        userFormDom.form.dispatchEvent(customFormEvents.formStopLoading);\n      });\n  });\n}\n\nfunction avatarFormHandler({ onAvatarDataUpdate }) {\n  if (avatarFormDom.form === null || avatarFormDom.link === null) {\n    console.error('Форма аватара не найдена');\n    return;\n  }\n\n  avatarFormDom.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    avatarFormDom.form.dispatchEvent(customFormEvents.formLoading);\n\n    currentUserAPI\n      .updateAvatar({\n        link: avatarFormDom.link.value,\n      })\n      .then((response) => {\n        onUserDataLoaded(response);\n        if (typeof onAvatarDataUpdate === 'function') {\n          onAvatarDataUpdate();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        avatarFormDom.form.dispatchEvent(customFormEvents.formStopLoading);\n      });\n  });\n}\n\nconst cardDom = {\n  cardTemplate: document.querySelector('#card-template'),\n  cardList: document.querySelector('.places__list'),\n};\n\nconst cardFormDom = {\n  form: document.querySelector(\"form[name='new-place']\"),\n  name: document.querySelector(\"input[name='place-name']\"),\n  link: document.querySelector(\"input[name='link']\"),\n};\n\nconst cardDeleteFormDom = {\n  form: document.querySelector(\"form[name='delete-card']\"),\n  cardId: document.querySelector(\"input[name='card-id']\"),\n  paragraph: document.querySelector(\"form[name='delete-card'] p\"),\n};\n\nconst cardImagePopupDom = {\n  image: document.querySelector('.popup_type_image .popup__image'),\n  caption: document.querySelector('.popup_type_image .popup__caption'),\n};\n\nconst cardPopup = enablePopup({\n  popupSelector: '.popup_type_new-card',\n  triggerSelector: '.profile__add-button',\n  onHidePopup: () => {\n    clearInputValues(cardFormDom.form, validationConfig);\n    clearValidation(cardFormDom.form, validationConfig);\n  },\n});\n\nconst deleteCardPopup = enablePopup({\n  popupSelector: '.popup_type_delete-card',\n  triggerSelector: '.hidden-popup-trigger',\n});\n\nconst cardImagePopup = enablePopup({\n  popupSelector: '.popup_type_image',\n  triggerSelector: '.hidden-popup-trigger',\n});\n\nfunction onCardLike({ cardId, cardLikeButton, likesAmount }) {\n  cardAPI\n    .like(cardId)\n    .then((response) => {\n      updateCardLikeUI({\n        likeButton: cardLikeButton,\n        likeText: likesAmount,\n        likeCount: response.likes.length,\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nfunction onCardRemoveLike({ cardId, cardLikeButton, likesAmount }) {\n  cardAPI\n    .removeLike(cardId)\n    .then((response) => {\n      updateCardLikeUI({\n        likeButton: cardLikeButton,\n        likeText: likesAmount,\n        likeCount: response.likes.length,\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nfunction onCardLikeButtonClick(id, cardLikeButton, likesAmount) {\n  if (cardLikeButton.classList.contains('card__like-button_is-active')) {\n    onCardRemoveLike({\n      cardId: id,\n      cardLikeButton: cardLikeButton,\n      likesAmount: likesAmount,\n    });\n  } else {\n    onCardLike({\n      cardId: id,\n      cardLikeButton: cardLikeButton,\n      likesAmount: likesAmount,\n    });\n  }\n}\n\nfunction onCardImageClick(url, caption) {\n  if (cardImagePopupDom.image === null || cardImagePopupDom.caption === null) {\n    console.error('Попап картинки карточки не найден');\n    return;\n  }\n\n  cardImagePopupDom.image.src = url;\n  cardImagePopupDom.image.alt = caption;\n  cardImagePopupDom.caption.textContent = caption;\n\n  cardImagePopup.show();\n}\n\nfunction onCardDeleteClick(id, title) {\n  if (\n    cardDeleteFormDom.form === null ||\n    cardDeleteFormDom.paragraph === null ||\n    cardDeleteFormDom.cardId === null\n  ) {\n    console.log('форма удаления карточки не найдена');\n    return;\n  }\n\n  cardDeleteFormDom.paragraph.textContent = `Вы собираетесь удалить '${title}'.`;\n  cardDeleteFormDom.cardId.value = id;\n\n  deleteCardPopup.show();\n}\n\nfunction cardDataToCardNode(data) {\n  const isDelete = data.owner._id === currentUser.id;\n  const isLiked = data.likes.some((el) => el._id === currentUser.id);\n\n  return createCardNode({\n    cardTemplate: cardDom.cardTemplate,\n    id: data._id,\n    title: data.name,\n    imageUrl: data.link,\n    showDelete: isDelete,\n    isLiked: isLiked,\n    likesCount: data.likes.length,\n    onLikeButtonClick: onCardLikeButtonClick,\n    onImageClick: onCardImageClick,\n    onDeleteClick: onCardDeleteClick,\n  });\n}\n\nfunction getCardListContainer() {\n  if (cardDom.cardList === null) {\n    console.error('Контейнер карточек не найден');\n    return document.createElement('div');\n  }\n  return cardDom.cardList;\n}\n\nfunction onCardListLoaded(data) {\n  const cardList = getCardListContainer();\n  data.forEach((item) => {\n    cardList.append(cardDataToCardNode(item));\n  });\n}\n\nfunction onNewCardCreation(data) {\n  const cardNode = cardDataToCardNode(data);\n  addCardToList(cardDom.cardList, cardNode);\n}\n\nfunction cardFormHandler({ onCardCreation }) {\n  if (cardFormDom.form === null || cardFormDom.name === null || cardFormDom.link === null) {\n    console.error('Форма карточки не найдена');\n    return;\n  }\n\n  cardFormDom.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    cardFormDom.form.dispatchEvent(customFormEvents.formLoading);\n\n    cardAPI\n      .create({\n        name: cardFormDom.name.value,\n        link: cardFormDom.link.value,\n      })\n      .then((response) => {\n        onNewCardCreation(response);\n        if (typeof onCardCreation === 'function') {\n          onCardCreation();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        cardFormDom.form.dispatchEvent(customFormEvents.formStopLoading);\n      });\n  });\n}\n\nfunction deleteCardFormHandler({ onCardDeletion }) {\n  if (cardDeleteFormDom.form === null || cardDeleteFormDom.cardId === null) {\n    console.error('Форма удаления карточки не найдена');\n    return;\n  }\n\n  cardDeleteFormDom.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    cardDeleteFormDom.form.dispatchEvent(customFormEvents.formLoading);\n\n    cardAPI\n      .delete(cardDeleteFormDom.cardId.value)\n      .then(() => {\n        if (typeof onCardDeletion === 'function') {\n          onCardDeletion(cardDeleteFormDom.cardId.value);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        cardDeleteFormDom.form.dispatchEvent(customFormEvents.formStopLoading);\n      });\n  });\n}\n\nfunction loadInitialData() {\n  Promise.all([currentUserAPI.load(), cardAPI.loadList()])\n    .then((response) => {\n      const userData = response[0];\n      const cardsData = response[1];\n\n      onUserDataLoaded(userData);\n      onCardListLoaded(cardsData);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nenableValidation(validationConfig);\n\nloadInitialData();\n\nuserFormHandler({\n  onUserDataUpdate: () => {\n    profilePopup.hide();\n  },\n});\n\ncardFormHandler({\n  onCardCreation: () => {\n    cardPopup.hide();\n  },\n});\n\navatarFormHandler({\n  onAvatarDataUpdate: () => {\n    avatarPopup.hide();\n  },\n});\n\ndeleteCardFormHandler({\n  onCardDeletion: (cardId) => {\n    removeCardFromList(cardId);\n    deleteCardPopup.hide();\n  },\n});\n"],"names":["config","baseUrl","headers","authorization","async","request","_ref","path","options","errorMessage","fetch","then","response","ok","json","Promise","reject","status","checkResponse","customPopupEvents","close","Event","closePopupOnESC","e","key","popup","document","querySelector","dispatchEvent","enablePopup","popupSelector","triggerSelector","onShowPopup","onHidePopup","trigger","console","error","closeButton","addEventListener","show","hide","target","type","classList","add","setTimeout","removeEventListener","remove","customFormEvents","formLoading","formStopLoading","hideInputError","formElement","inputElement","validationConfig","errorElement","name","inputErrorClass","textContent","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","updateCardLikeUI","_ref2","likeButton","likeText","likeCount","toggle","formSelector","currentUser","description","avatar","id","userDom","profileName","profileDescription","profileImage","userFormDom","form","avatarFormDom","link","profilePopup","value","avatarPopup","onUserDataLoaded","data","about","_id","style","backgroundImage","cardDom","cardTemplate","cardList","cardFormDom","cardDeleteFormDom","cardId","paragraph","cardImagePopupDom","image","caption","cardPopup","clearInputValues","deleteCardPopup","cardImagePopup","onCardLikeButtonClick","cardLikeButton","likesAmount","contains","_ref4","method","cardAPI","likes","length","catch","log","onCardRemoveLike","_ref3","onCardLike","onCardImageClick","url","src","alt","onCardDeleteClick","title","cardDataToCardNode","isDelete","owner","isLiked","el","imageUrl","likesCount","showDelete","onLikeButtonClick","onImageClick","onDeleteClick","card","content","cloneNode","cardRoot","cardImage","cardDeleteButton","cardTitle","createCardNode","buttonInitialText","preventDefault","patternMismatch","dataset","showInputError","validationMessage","isValid","setEventListeners","enableValidation","all","currentUserAPI","userData","cardsData","createElement","item","append","onCardListLoaded","onUserDataUpdate","body","JSON","stringify","finally","userFormHandler","_ref5","onCardCreation","prepend","cardFormHandler","onAvatarDataUpdate","avatarFormHandler","_ref6","onCardDeletion","deleteCardFormHandler","removeCardFromList"],"sourceRoot":""}