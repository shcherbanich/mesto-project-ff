(()=>{"use strict";const e={baseUrl:"https://nomoreparties.co/v1/cohort-mag-4",headers:{authorization:"37fbf8d3-fcee-4506-bb54-03f43938c259","Content-Type":"application/json"}},t=async()=>fetch(`${e.baseUrl}/cards`,{method:"GET",headers:e.headers}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при получении списка карточек: ${e.status}`))),o={formLoading:new Event("form-loading"),formStopLoading:new Event("form-stop-loading")},r={notEmpty:e=>!!(e&&e.length>0)||"Вы пропустили это поле",minLength:(e,t)=>!!(e&&e.length>=t)||`Минимальное количество символов: ${t}. Длина текста сейчас: ${e.length}`,maxLength:(e,t)=>!!(e&&e.length<=t)||`Максимальное количество символов: ${t}. Длина текста сейчас: ${e.length}`,text:e=>!!/^[a-zA-Zа-яА-ЯёЁ\s-]+$/.test(e)||"Разрешены только латинские, кириллические буквы, знаки дефиса и пробелы",url:e=>{try{return new URL(e),!0}catch(e){return"Введите ссылку"}}};function n(e){let{formSelector:t,submitButtonSelector:r,formErrorSelector:n,inputErrorClass:a,validationConfig:i}=e;const l=document.querySelector(t),u=document.querySelector(r),c=[];if(null===l||null===u)return void console.error("Попап не содержит нужных DOM элементов для работы валидации");let p=u.textContent;function s(){c.every((e=>e.validate()))?u.removeAttribute("disabled"):u.setAttribute("disabled","disabled")}return l.addEventListener("submit",(e=>{e.preventDefault()})),l.addEventListener(o.formLoading.type,(e=>{const t=e.text??"Ждите...";u.setAttribute("disabled","disabled"),u.textContent=t})),l.addEventListener(o.formStopLoading.type,(()=>{u.removeAttribute("disabled"),u.textContent=p})),{validate:function(){0===c.length&&Array.from(i).forEach((e=>{const t=function(e){let{selector:t,errorSelector:o,inputErrorClass:r,validators:n,onInput:a}=e;const i=document.querySelector(t);if(null===i)return void console.error("Селектор инпут группы не верен");const l=i.querySelector("input"),u=i.querySelector(o);if(null!==l&&null!==u)return l.addEventListener("input",(()=>{for(let t=0;t<n.length;t++){const o=n[t],i=o.rule(l.value,o.param);if("function"==typeof a&&a(),"string"==typeof i)return e=i,u.textContent=e,void l.classList.add(r);c()}var e})),{validate:function(){return Array.from(n).every((e=>!0===e.rule(l.value,e.param)))},reset:function(){c(),l.value=""}};function c(){u.textContent="",l.classList.remove(r)}console.error("Инпут и сообщение об ошибке отсутствуют в DOM")}({selector:e.groupSelector,errorSelector:n,inputErrorClass:a,validators:e.validators,onInput:s});c.push(t)})),s()},reset:function(){c.forEach((e=>{e.reset()}))}}}const a={name:"",description:"",avatar:"",id:""};function i(e){a.name=e.name??"",a.description=e.about??"",a.avatar=e.avatar??"",a.id=e._id??"",function(){const e=document.querySelector(".profile__title"),t=document.querySelector(".profile__description"),o=document.querySelector(".profile__image");null!==e&&null!==t&&null!==o?(e.textContent=a.name,t.textContent=a.description,o.style.backgroundImage=`url(${a.avatar})`):console.error("Нет необходимого html для отображения данных пользователя")}()}function l(e){let{popupSelector:t,triggerSelector:o,onShowPopup:r,onHidePopup:n}=e;const a=document.querySelector(t),i=document.querySelector(o);if(null===a||null===i)return void console.error("Неверный селектор для попапа и/или триггера",t,o);const l=a.querySelector(".popup__close");if(null!==l)return i.addEventListener("click",u),l.addEventListener("click",c),{show:u,hide:c};function u(){a.classList.add("popup_is-animated"),setTimeout((()=>{a.classList.add("popup_is-opened")}),1),"function"==typeof r&&r()}function c(){a.classList.remove("popup_is-opened"),setTimeout((()=>{a.classList.remove("popup_is-animated")}),600),"function"==typeof n&&n()}console.error("В попапе отсутствует кнопка закрыть",t)}const u=l({popupSelector:".popup_type_delete-card",triggerSelector:".hidden-popup-trigger"}),c=l({popupSelector:".popup_type_image",triggerSelector:".hidden-popup-trigger"});function p(t){let{id:o,title:r,imageUrl:n,likesCount:a,showDelete:i,isLiked:l}=t;const p=document.querySelector("#card-template");if(null===p)return void console.error("Тепмлейт карточки не найден");const s=p.content.cloneNode(!0),d=s.querySelector(".card__image"),m=s.querySelector(".card__delete-button"),f=s.querySelector(".card__title"),_=s.querySelector(".card__like-button"),h=s.querySelector(".card__like-count");return!0!==i&&m.remove(),!0===l&&_.classList.add("card__like-button_is-active"),f.textContent=r,d.src=n,h.textContent=a,_.addEventListener("click",(()=>{_.classList.contains("card__like-button_is-active")?function(t){let{cardId:o,cardLikeButton:r,likesAmount:n}=t;(async t=>fetch(`${e.baseUrl}/cards/likes/${t}`,{method:"DELETE",headers:e.headers}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при убирании лайка карточки: ${e.status}`))))(o).then((e=>{r.classList.remove("card__like-button_is-active"),n.textContent=e.likes.length})).catch((e=>{console.log(e)}))}({cardId:o,cardLikeButton:_,likesAmount:h}):function(t){let{cardId:o,cardLikeButton:r,likesAmount:n}=t;(async t=>fetch(`${e.baseUrl}/cards/likes/${t}`,{method:"PUT",headers:e.headers}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при лайкании карточки: ${e.status}`))))(o).then((e=>{r.classList.add("card__like-button_is-active"),n.textContent=e.likes.length})).catch((e=>{console.log(e)}))}({cardId:o,cardLikeButton:_,likesAmount:h})})),d.addEventListener("click",(()=>{const e=document.querySelector(".popup_type_image .popup__image"),t=document.querySelector(".popup_type_image .popup__caption");null!==e&&null!==t?(e.src=d.src,t.textContent=r,c.show()):console.error("Попап картинки карточки не найден")})),d.addEventListener("error",(()=>{d.src="bfc191ba871c50b18e56.png"})),!0===i&&m.addEventListener("click",(()=>{const e=document.querySelector("form[name='delete-card']"),t=e.querySelector("p"),n=e.querySelector("input[name='card-id']");t.textContent=`Вы собираетесь удалить '${r}'.`,n.value=o,u.show()})),s}function s(){const e=document.querySelector(".places__list");return null===e?(console.error("контейнер для списка карточек не найден"),document.createElement("div")):e}function d(e){!function(){const e=s();for(;e.firstChild;)e.firstChild.remove()}();const t=s(),o=function(e){const t=[];return e.forEach((e=>{t.push(m(e))})),t}(e);o.forEach((e=>{t.append(e)}))}function m(e){const t=e.owner._id===a.id,o=e.likes.some((e=>e._id===a.id));return p({id:e._id,title:e.name,imageUrl:e.link,showDelete:t,isLiked:o,likesCount:e.likes.length})}n({formSelector:".popup_type_delete-card .popup__form",submitButtonSelector:".popup_type_delete-card .popup__button",formErrorSelector:".popup__error",inputErrorClass:"popup__input_type_error",validationConfig:[]}),function(t){let{onCardDeletion:r}=t;const n=document.querySelector("form[name='delete-card']"),a=n.querySelector("input[name='card-id']");null!==a?n.addEventListener("submit",(t=>{t.preventDefault(),n.dispatchEvent(o.formLoading),(async t=>fetch(`${e.baseUrl}/cards/${t}`,{method:"DELETE",headers:e.headers}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при удалении карточки: ${e.status}`))))(a.value).then((()=>{"function"==typeof r&&r()})).catch((e=>{console.log(e)})).finally((()=>{n.dispatchEvent(o.formStopLoading)}))})):console.error("Форма удаления карточки не найдена")}({onCardDeletion:()=>{t().then((e=>{d(e)})),u.hide()}});const f=l({popupSelector:".popup_type_edit",triggerSelector:".profile__edit-button",onShowPopup:function(){(function(){const e=document.querySelector(".popup_type_edit input[name='name']"),t=document.querySelector(".popup_type_edit input[name='description']");null!==t&&null!==e?(e.value=a.name,t.value=a.description):console.error("Нет необходимого html для отображения данных пользователя в попапе")})(),_.validate()},onHidePopup:function(){setTimeout((()=>{_.reset()}),1e3)}}),_=n({formSelector:".popup_type_edit .popup__form",submitButtonSelector:".popup_type_edit .popup__button",formErrorSelector:".popup__error",inputErrorClass:"popup__input_type_error",validationConfig:[{groupSelector:'[data-name="name"]',validators:[{rule:r.notEmpty},{rule:r.minLength,param:2},{rule:r.maxLength,param:40},{rule:r.text}]},{groupSelector:'[data-name="description"]',validators:[{rule:r.notEmpty},{rule:r.minLength,param:2},{rule:r.maxLength,param:200},{rule:r.text}]}]}),h=l({popupSelector:".popup_type_new-card",triggerSelector:".profile__add-button",onShowPopup:function(){v.validate()},onHidePopup:function(){setTimeout((()=>{v.reset()}),1e3)}}),v=n({formSelector:".popup_type_new-card .popup__form",submitButtonSelector:".popup_type_new-card .popup__button",formErrorSelector:".popup__error",inputErrorClass:"popup__input_type_error",validationConfig:[{groupSelector:'[data-name="place-name"]',validators:[{rule:r.notEmpty},{rule:r.minLength,param:2},{rule:r.maxLength,param:30},{rule:r.text}]},{groupSelector:'[data-name="link"]',validators:[{rule:r.notEmpty},{rule:r.url}]}]}),y=l({popupSelector:".popup_type_edit-avatar",triggerSelector:".profile__image",onShowPopup:function(){(function(){const e=document.querySelector(".popup_type_edit-avatar input[name='avatar-link']");null!==e?e.value=a.avatar:console.error("Инпут аватара профиля не найден")})(),S.validate()},onHidePopup:function(){setTimeout((()=>{S.reset()}),1e3)}}),S=n({formSelector:".popup_type_edit-avatar .popup__form",submitButtonSelector:".popup_type_edit-avatar .popup__button",formErrorSelector:".popup__error",inputErrorClass:"popup__input_type_error",validationConfig:[{groupSelector:'[data-name="avatar-link"]',validators:[{rule:r.notEmpty},{rule:r.url}]}]});Promise.all([(async()=>fetch(`${e.baseUrl}/users/me`,{method:"GET",headers:e.headers}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при получении данных пользователя: ${e.status}`))))(),t()]).then((e=>{const t=e[0],o=e[1];i(t),d(o)})).catch((e=>{console.log(e)})),function(t){let{onUserDataUpdate:r}=t;const n=document.querySelector("form[name='edit-profile']"),a=n.querySelector("input[name='name']"),l=n.querySelector("input[name='description']");null!==a&&null!==l?n.addEventListener("submit",(t=>{t.preventDefault(),n.dispatchEvent(o.formLoading),(async t=>{let{name:o,description:r}=t;return fetch(`${e.baseUrl}/users/me`,{method:"PATCH",headers:e.headers,body:JSON.stringify({name:o,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при обновлении данных пользователя: ${e.status}`)))})({name:a.value,description:l.value}).then((e=>{i(e),"function"==typeof r&&r()})).catch((e=>{console.log(e)})).finally((()=>{n.dispatchEvent(o.formStopLoading)}))})):console.error("Форма пользователя не найдена")}({onUserDataUpdate:()=>{f.hide()}}),function(t){let{onCardCreation:r}=t;const n=document.querySelector("form[name='new-place']"),a=n.querySelector("input[name='place-name']"),i=n.querySelector("input[name='link']");null!==a&&null!==i?n.addEventListener("submit",(t=>{t.preventDefault(),n.dispatchEvent(o.formLoading),(async t=>{let{name:o,link:r}=t;return fetch(`${e.baseUrl}/cards`,{method:"POST",headers:e.headers,body:JSON.stringify({name:o,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при создании новой карточки: ${e.status}`)))})({name:a.value,link:i.value}).then((e=>{var t;t=m(e),s().prepend(t),"function"==typeof r&&r()})).catch((e=>{console.log(e)})).finally((()=>{n.dispatchEvent(o.formStopLoading)}))})):console.error("Форма карточки не найдена")}({onCardCreation:()=>{h.hide()}}),function(t){let{onAvatarDataUpdate:r}=t;const n=document.querySelector("form[name='avatar']"),a=n.querySelector("input[name='avatar-link']");null!==a?n.addEventListener("submit",(t=>{t.preventDefault(),n.dispatchEvent(o.formLoading),(async t=>{let{link:o}=t;return fetch(`${e.baseUrl}/users/me/avatar`,{method:"PATCH",headers:e.headers,body:JSON.stringify({avatar:o})}).then((e=>e.ok?e.json():Promise.reject(`Ошибка API при обновлении аватара: ${e.status}`)))})({link:a.value}).then((e=>{i(e),"function"==typeof r&&r()})).catch((e=>{console.log(e)})).finally((()=>{n.dispatchEvent(o.formStopLoading)}))})):console.error("Форма аватара не найдена")}({onAvatarDataUpdate:()=>{y.hide()}})})();
//# sourceMappingURL=main.f7915e14d24eea331665.js.map